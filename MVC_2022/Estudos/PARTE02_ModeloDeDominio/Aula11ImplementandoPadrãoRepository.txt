Mostrando o Padrão Repository:

1º: Fluxo do Request na aplicação MVC usando EF CORE:
	1.1º: Forte acoplamento com a ferramenta ORM;
	1.2º: Lógica de acesso a dados no Controller;

2º: Fluxo do Request na aplicação MVC usando o padrão Repository:
	2.1º: Desacopla e centraliza a lógica de acesso aos dados da aplicação; 
	2.2º: O padrão Repository cria uma camada de abstração entre a camada de acesso aos dados e camada da lógica de negócios da aplicação;

3º: Padrão Repository - Vantagens
	3.1º: Desacopla a sua aplicação da lógica de acesso a dados;
	3.2º: Centraliza a lógica de acesso a dados;
	3.3º: Facilita a realização de testes;
	3.4º: Facilita a manutenção do código;
	3.5º: Minimza a duplicação de código nas consultas e comandos;

4º: Padrão Repository - Implantação:
	4.1º: Criar uma interface com o contrato da lógica de acesso aos dados; 
	4.2º: Criar uma classe concreta que implementa o contrat da interface;

=================================================================

1º: Padrão Repository - Categorias:
	1.1º: Propriedades categorias somente leitura que retorna uma lista de objetos Categoria
	1.2º: IEnumerable - Expõe um enumerador que dá suporte a uma interação simples em uma coleção não genérica;
	1.3º: Funciona apenas como leitura;
	1.4º: Somente percorre a coleção sequencialmente
	1.5º: Usamos a injeção de dependência nativa da ASP.NET Core para injetar uma instânci ado serviço do contexto representado pela classe AppDbContext no contrutor da classe;

2º: Padrão Repository = Lanches:
	2.1º: A assinatura da propriedade somente leitura Lanches que retorna uma lista de objetos Lanche
	2.2º: A assinatura da propriedade somente leitura LanchesPreferidos que retorna uma lista de objetos Lanche onde iremos filtrar os lanches preferidos;
	2.3º: A assinatura do método GetLancheById (int lancheId) que retornam um objeto Lache pelo seu identificador LancheId;


====================================================================

1º: Criar uma interface:
	1.1º: ICategoriaRepository (somente para leitura)

2º: Criar uma classe concentra:
	2.1º: CategoriaRepository
	2.2º: Fazer a instância do ICategoriaRepository;
	2.3º: Fazer a instância do AppDbContext;
	2.4º: Criar o construtor de AppDbContext;

===============================================================

Padrão Rository - Lanches

1º: A assinatura da propriedade somente leitura Lanches que retorna uma lista de objetos Lanche;

2º: A assinatura da propriedade somente leitura LanchesPreferidos que retorna uma lista de objetos Lanche onde iremos filtrar apenas os lanches preferidos;

3º: A assinatura do método GetLancheById(int lancheId) que retorna um objeto Lanche pelo seu Identidicador LancheId

	